// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id                   Int             @id @default(autoincrement())
  type                 String
  salonName            String          @map("salon_name")
  ownerName            String?         @map("owner_name")
  accountNumber        String?         @map("account_number")
  themePrimaryColor    String          @default("Pink") @map("theme_primary_color")
  themeBackgroundColor String          @default("White") @map("theme_background_color")
  createdAt            DateTime        @default(now()) @map("created_at")
  users                User[]
  clients              Client[]
  services             Service[]
  appointments         Appointment[]
  products             Product[]
  expenses             Expense[] // Modelo para Gastos
  subscriptions        Subscription[]
  payments             Payment[]

  @@map("businesses")
}

model Plan {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  price         Decimal        @db.Decimal(10, 2)
  features      String[]
  subscriptions Subscription[]

  @@map("plans")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  passwordHash String    @map("password_hash")
  firstName    String?   @map("first_name")
  lastName     String?   @map("last_name")
  phone        String?
  role         String    @default("User")
  businessId   Int?      @map("business_id")
  createdAt    DateTime  @default(now()) @map("created_at")
  business     Business? @relation(fields: [businessId], references: [id])

  @@map("users")
}

model Client {
  id            Int           @id @default(autoincrement())
  businessId    Int           @map("business_id")
  firstName     String        @map("first_name")
  lastName      String?       @map("last_name")
  phone         String?
  email         String?
  birthDate     DateTime?     @map("birth_date") @db.Date
  notes         String?
  createdAt     DateTime      @default(now()) @map("created_at")
  business      Business      @relation(fields: [businessId], references: [id])
  appointments  Appointment[]

  @@map("clients")
}

model Service {
  id                 Int                    @id @default(autoincrement())
  businessId         Int                    @map("business_id")
  name               String
  price              Decimal                @default(0) @db.Decimal(10, 2)
  durationMinutes    Int?                   @map("duration_minutes")
  description        String?
  business           Business               @relation(fields: [businessId], references: [id])
  appointmentServices AppointmentService[]

  @@map("services")
}

model Appointment {
  id                  Int                    @id @default(autoincrement())
  businessId          Int                    @map("business_id")
  clientId            Int                    @map("client_id")
  dateTime            DateTime
  status              String                 @default("Scheduled")
  cost                Decimal?               @db.Decimal(10, 2)
  notes               String?
  extraNotes          String? 
  extraCost           Decimal? @db.Decimal(10, 2) 
  createdAt           DateTime               @default(now()) @map("created_at")
  business            Business               @relation(fields: [businessId], references: [id])
  client              Client                 @relation(fields: [clientId], references: [id])
  appointmentServices AppointmentService[]

  @@map("appointments")
}

model AppointmentService {
  appointmentId Int         @map("appointment_id")
  serviceId     Int         @map("service_id")
  appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
  service       Service     @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@id([appointmentId, serviceId])
  @@map("appointment_services")
}

model Product {
  id           Int      @id @default(autoincrement())
  businessId   Int      @map("business_id")
  name         String
  currentStock Int      @default(0) @map("current_stock")
  minStock     Int      @default(0) @map("min_stock")
  createdAt    DateTime @default(now()) @map("created_at")
  business     Business @relation(fields: [businessId], references: [id])

  @@map("products")
}

model Expense {
  id          Int      @id @default(autoincrement())
  businessId  Int      @map("business_id")
  description String
  amount      Decimal  @db.Decimal(10, 2)
  date        DateTime
  business    Business @relation(fields: [businessId], references: [id])

  @@map("expenses")
}

model Subscription {
  id         Int      @id @default(autoincrement())
  businessId Int      @unique @map("business_id")
  planId     Int      @map("plan_id")
  status     String
  startDate  DateTime @map("start_date")
  endDate    DateTime @map("end_date")
  business   Business @relation(fields: [businessId], references: [id])
  plan       Plan     @relation(fields: [planId], references: [id])
  payments   Payment[]

  @@map("subscriptions")
}

model Payment {
  id             Int           @id @default(autoincrement())
  businessId     Int           @map("business_id")
  amount         Decimal       @db.Decimal(10, 2)
  date           DateTime      @default(now())
  planName       String        @map("plan_name")
  subscriptionId Int?          @map("subscription_id")
  business       Business      @relation(fields: [businessId], references: [id])
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])

  @@map("payments")
}